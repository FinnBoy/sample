<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0"         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">	<modelVersion>4.0.0</modelVersion>	<groupId>com.awaken</groupId>	<artifactId>sample</artifactId>	<version>1.0</version>	<packaging>jar</packaging>	<name>${project.artifactId}</name>	<url>http://maven.apache.org</url>	<properties>		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>		<maven.test.skip>true</maven.test.skip>		<maven.test.failure.ignore>true</maven.test.failure.ignore>        <jdk.version>1.8</jdk.version>		<spring.version>4.2.1.RELEASE</spring.version>		<tomcat.version>7.0.59</tomcat.version>        <!-- # framework version # -->        <f.v.tomcat.version>7.0.59</f.v.tomcat.version>        <f.v.tomcat.embed.version>7.0.79</f.v.tomcat.embed.version>        <f.v.jetty.version>7.6.21.v20160908</f.v.jetty.version>        <f.v.jdbc.mysql.version>5.1.18</f.v.jdbc.mysql.version>        <!-- hibernate 4.2.x + Spring 3.x integration success. cause: -->        <!-- hibernate 4.2.x: org.hibernate.service.jta.platform.spi.JtaPlatform -->        <!-- hibernate 4.3.x: org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform -->        <f.v.hibernate.version>4.2.21.Final</f.v.hibernate.version><!-- 5.2.9.Final --><!-- 4.3.11.Final -->        <f.v.hibernate3.version>3.3.2.GA</f.v.hibernate3.version>        <f.v.hibernate2.version>2.1.8</f.v.hibernate2.version>        <f.v.struts2.version>2.5.10</f.v.struts2.version>        <f.v.spring.version>3.2.18.RELEASE</f.v.spring.version><!-- 4.3.7.RELEASE -->        <f.v.mybatis.version>3.3.1</f.v.mybatis.version>        <f.v.mybatis.spring.version>1.2.5</f.v.mybatis.spring.version>        <f.v.shiro.version>1.3.2</f.v.shiro.version>        <f.v.druid.version>1.0.20</f.v.druid.version>        <f.v.cxf.version>3.0.13</f.v.cxf.version>        <f.v.slf4j.version>1.6.1</f.v.slf4j.version>        <f.v.logback.version>1.1.2</f.v.logback.version>        <f.v.log4j2.version>2.3</f.v.log4j2.version><!-- 2.3    2.4.1    2.7 -->        <!-- log4j2: As of version 2.4, the Log4j 2 API requires Java 7. Versions 2.3 and earlier require Java 6. -->        <f.v.freemarker.version>2.3.23</f.v.freemarker.version>        <f.v.poi.version>3.10.1</f.v.poi.version>        <f.v.cglib.version>3.2.5</f.v.cglib.version>        <f.v.asm.version>3.3.1</f.v.asm.version>    </properties>    <dependencyManagement>        <dependencies>            <!-- ~~~~~~~~~~~~~~~~~~~~ Junit ~~~~~~~~~~~~~~~~~~~~ -->            <dependency>                <groupId>junit</groupId>                <artifactId>junit</artifactId>                <version>4.12</version>                <scope>test</scope>            </dependency>            <!-- ~~~~~~~~~~~ ByteCode Generation Library ~~~~~~~~~~~ -->            <dependency>                <groupId>asm</groupId>                <artifactId>asm</artifactId>                <version>${f.v.asm.version}</version>            </dependency>            <dependency>                <groupId>cglib</groupId>                <artifactId>cglib</artifactId>                <version>${f.v.cglib.version}</version>            </dependency>            <!-- ~~~~~~~~~~~~~~~~~~~~ POI(Excel) ~~~~~~~~~~~~~~~~~~~~ -->            <dependency>                <groupId>org.apache.poi</groupId>                <artifactId>poi</artifactId>                <version>${f.v.poi.version}</version>            </dependency>            <!-- ~~~~~~~~~~~~~~~~~~~~ FreeMarker ~~~~~~~~~~~~~~~~~~~~ -->            <dependency>                <groupId>org.freemarker</groupId>                <artifactId>freemarker</artifactId>                <version>${f.v.freemarker.version}</version>            </dependency>            <!-- ~~~~~~~~~~~~~~~~~~~~ Common ~~~~~~~~~~~~~~~~~~~~ -->            <dependency>                <groupId>org.apache.commons</groupId>                <artifactId>commons-lang3</artifactId>                <version>3.5</version>            </dependency>            <dependency>                <groupId>commons-fileupload</groupId>                <artifactId>commons-fileupload</artifactId>                <version>1.3.3</version>            </dependency>            <!-- ~~~~~~~~~~~~~~~~~~~~ Log ~~~~~~~~~~~~~~~~~~~~ -->            <!-- log -->            <!-- slf4j:replace jcl to be invoked for logging -->            <dependency>                <groupId>org.slf4j</groupId>                <artifactId>jcl-over-slf4j</artifactId>                <version>${f.v.slf4j.version}</version>            </dependency>            <dependency>                <groupId>org.slf4j</groupId>                <artifactId>slf4j-api</artifactId>                <version>${f.v.slf4j.version}</version>            </dependency>            <!-- slf4j:integration with logback -->            <dependency>                <groupId>ch.qos.logback</groupId>                <artifactId>logback-classic</artifactId>                <version>${f.v.logback.version}</version>            </dependency>            <dependency>                <groupId>ch.qos.logback</groupId>                <artifactId>logback-core</artifactId>                <version>${f.v.logback.version}</version>            </dependency>            <!-- slf4j:integration with log4j 2 -->            <dependency>                <groupId>org.apache.logging.log4j</groupId>                <artifactId>log4j-api</artifactId>                <version>${f.v.log4j2.version}</version>            </dependency>            <dependency>                <groupId>org.apache.logging.log4j</groupId>                <artifactId>log4j-core</artifactId>                <version>${f.v.log4j2.version}</version>            </dependency>            <dependency>                <groupId>org.apache.logging.log4j</groupId>                <artifactId>log4j-web</artifactId><!--web工程需要包含log4j-web，非web工程不需要-->                <version>${f.v.log4j2.version}</version>            </dependency>            <dependency>                <groupId>org.apache.logging.log4j</groupId>                <artifactId>log4j-slf4j-impl</artifactId><!-- bridge with slf4j:slf4j invoke log4j2 implementation -->                <version>${f.v.log4j2.version}</version>            </dependency>            <!-- slf4j:integration with log4j -->            <dependency>                <groupId>org.slf4j</groupId>                <artifactId>slf4j-log4j12</artifactId>                <version>${f.v.slf4j.version}</version>            </dependency>            <dependency>                <groupId>log4j</groupId>                <artifactId>log4j</artifactId>                <version>1.2.14</version>            </dependency>            <!-- ~~~~~~~~~~~~~~~~~~~~ struts2 ~~~~~~~~~~~~~~~~~~~~ -->            <dependency>                <groupId>org.apache.struts</groupId>                <artifactId>struts2-core</artifactId>                <version>${f.v.struts2.version}</version>            </dependency>            <!-- ~~~~~~~~~~~~~~~~~~~~ Mybatis ~~~~~~~~~~~~~~~~~~~~ -->            <dependency>                <groupId>org.mybatis</groupId>                <artifactId>mybatis</artifactId>                <version>${f.v.mybatis.version}</version>            </dependency>            <dependency>                <groupId>org.mybatis</groupId>                <artifactId>mybatis-spring</artifactId>                <version>${f.v.mybatis.spring.version}</version>            </dependency>            <!-- ~~~~~~~~~~~~~~~~~~~~ Spring ~~~~~~~~~~~~~~~~~~~~ -->            <!-- spring use commons-logging as prior option,                 so use jcl-over-slf4j.jar for invoking slf4j instead of commons-logging                -->            <dependency>                <groupId>org.springframework</groupId>                <artifactId>spring-core</artifactId>                <version>${f.v.spring.version}</version>                <exclusions>                    <exclusion>                        <groupId>commons-logging</groupId>                        <artifactId>commons-logging</artifactId>                    </exclusion>                </exclusions>            </dependency>            <dependency>                <groupId>org.springframework</groupId>                <artifactId>spring-beans</artifactId>                <version>${f.v.spring.version}</version>            </dependency>            <dependency>                <groupId>org.springframework</groupId>                <artifactId>spring-context</artifactId>                <version>${f.v.spring.version}</version>            </dependency>            <dependency>                <groupId>org.springframework</groupId>                <artifactId>spring-aspects</artifactId>                <version>${f.v.spring.version}</version>            </dependency>            <dependency>                <groupId>org.springframework</groupId>                <artifactId>spring-aop</artifactId>                <version>${f.v.spring.version}</version>            </dependency>            <dependency>                <groupId>org.springframework</groupId>                <artifactId>spring-tx</artifactId>                <version>${f.v.spring.version}</version>            </dependency>            <dependency>                <groupId>org.springframework</groupId>                <artifactId>spring-orm</artifactId>                <version>${f.v.spring.version}</version>            </dependency>            <dependency>                <groupId>org.springframework</groupId>                <artifactId>spring-web</artifactId>                <version>${f.v.spring.version}</version>            </dependency>            <dependency>                <groupId>org.springframework</groupId>                <artifactId>spring-webmvc</artifactId>                <version>${f.v.spring.version}</version>            </dependency>            <dependency>                <groupId>org.springframework</groupId>                <artifactId>spring-context-support</artifactId>                <version>${f.v.spring.version}</version>            </dependency>            <!-- ~~~~~~~~~~~~~~~~~~~~ Mysql JDBC ~~~~~~~~~~~~~~~~~~~~ -->            <dependency>                <groupId>mysql</groupId>                <artifactId>mysql-connector-java</artifactId>                <version>${f.v.jdbc.mysql.version}</version>            </dependency>            <!-- old version hibernate            <dependency>                <groupId>net.sf.hibernate</groupId>                <artifactId>hibernate</artifactId>                <version>${f.v.hibernate2.version}</version>            </dependency>            <dependency>                <groupId>org.hibernate</groupId>                <artifactId>hibernate-core</artifactId>                <version>${f.v.hibernate3.version}</version>            </dependency>            -->            <!-- ~~~~~~~~~~~~~~~~~~~~ Hibernate ~~~~~~~~~~~~~~~~~~~~ -->            <!-- hibernate use jboss.logging as prior option.                    we can set system.property "org.jboss.logging.provider" = "slf4j",                    and it will use slf4j instead of jboss.logging.                    reference:                        org.jboss.logging.LoggerProviders                        org.jboss.logging.Logger                        org.hibernate.internal.CoreMessageLogger_$logger                    version(hibernate core): 4.2.X                    version(jboss logging):3.1.0.GA                -->            <dependency>                <groupId>org.hibernate</groupId>                <artifactId>hibernate-core</artifactId>                <version>${f.v.hibernate.version}</version>            </dependency>            <!-- for JPA, use hibernate-entitymanager instead of hibernate-core -->            <dependency>                <groupId>org.hibernate</groupId>                <artifactId>hibernate-entitymanager</artifactId>                <version>${f.v.hibernate.version}</version>            </dependency>            <!-- optional -->            <!--            <dependency>                <groupId>org.hibernate</groupId>                <artifactId>hibernate-c3p0</artifactId>                <version>${hibernate.version}</version>            </dependency>            <dependency>                <groupId>org.hibernate</groupId>                <artifactId>hibernate-ehcache</artifactId>                <version>${hibernate.version}</version>            </dependency>            <dependency>                <groupId>org.hibernate</groupId>                <artifactId>hibernate-osgi</artifactId>                <version>${hibernate.version}</version>            </dependency>            <dependency>                <groupId>org.hibernate</groupId>                <artifactId>hibernate-envers</artifactId>                <version>${hibernate.version}</version>            </dependency>            <dependency>                <groupId>org.hibernate</groupId>                <artifactId>hibernate-proxool</artifactId>                <version>${hibernate.version}</version>            </dependency>            <dependency>                <groupId>org.hibernate</groupId>                <artifactId>hibernate-infinispan</artifactId>                <version>${hibernate.version}</version>            </dependency>            -->            <!-- ~~~~~~~~~~~~~~~~~~~~ Jetty ~~~~~~~~~~~~~~~~~~~~ -->            <dependency>                <groupId>org.eclipse.jetty</groupId>                <artifactId>jetty-util</artifactId>                <version>${f.v.jetty.version}</version>            </dependency>            <dependency>                <groupId>org.eclipse.jetty</groupId>                <artifactId>jetty-io</artifactId>                <version>${f.v.jetty.version}</version>            </dependency>            <dependency>                <groupId>org.eclipse.jetty</groupId>                <artifactId>jetty-http</artifactId>                <version>${f.v.jetty.version}</version>            </dependency>            <!--  -->            <dependency>                <groupId>org.eclipse.jetty</groupId>                <artifactId>jetty-continuation</artifactId>                <version>${f.v.jetty.version}</version>            </dependency>            <dependency>                <groupId>org.eclipse.jetty</groupId>                <artifactId>jetty-server</artifactId>                <version>${f.v.jetty.version}</version>            </dependency>            <!--  -->            <dependency>                <groupId>org.eclipse.jetty</groupId>                <artifactId>jetty-security</artifactId>                <version>${f.v.jetty.version}</version>            </dependency>            <dependency>                <groupId>org.eclipse.jetty</groupId>                <artifactId>jetty-servlet</artifactId>                <version>${f.v.jetty.version}</version>            </dependency>            <dependency>                <groupId>org.eclipse.jetty</groupId>                <artifactId>jetty-jsp</artifactId>                <version>${f.v.jetty.version}</version>            </dependency>            <dependency>                <groupId>org.eclipse.jetty</groupId>                <artifactId>jetty-xml</artifactId>                <version>${f.v.jetty.version}</version>            </dependency>            <dependency>                <groupId>org.eclipse.jetty</groupId>                <artifactId>jetty-webapp</artifactId>                <version>${f.v.jetty.version}</version>            </dependency>            <!-- ~~~~~~~~~~~~~~~~~~~~ druid ~~~~~~~~~~~~~~~~~~~~ -->            <dependency>                <groupId>com.alibaba</groupId>                <artifactId>druid</artifactId>                <version>${f.v.druid.version}</version>            </dependency>            <!-- ~~~~~~~~~~~~~~~~~~~~ Shiro ~~~~~~~~~~~~~~~~~~~~ -->            <!-- shiro use slf4j to log. -->            <dependency>                <groupId>org.apache.shiro</groupId>                <artifactId>shiro-core</artifactId>                <version>${f.v.shiro.version}</version>            </dependency>            <dependency>                <groupId>org.apache.shiro</groupId>                <artifactId>shiro-web</artifactId>                <version>${f.v.shiro.version}</version>            </dependency>            <dependency>                <groupId>org.apache.shiro</groupId>                <artifactId>shiro-spring</artifactId>                <version>${f.v.shiro.version}</version>            </dependency>            <dependency>                <groupId>org.apache.shiro</groupId>                <artifactId>shiro-quartz</artifactId>                <version>${f.v.shiro.version}</version>            </dependency>            <dependency>                <groupId>org.apache.shiro</groupId>                <artifactId>shiro-ehcache</artifactId>                <version>${f.v.shiro.version}</version>            </dependency>            <!-- ~~~~~~~~~~~~~~~~~~~~ tomcat.embed ~~~~~~~~~~~~~~~~~~~~ -->            <dependency>                <groupId>org.apache.tomcat.embed</groupId>                <artifactId>tomcat-embed-core</artifactId>                <version>${f.v.tomcat.embed.version}</version>                <exclusions>                    <exclusion>                        <groupId>javax.servlet</groupId>                        <artifactId>javax.servlet-api</artifactId>                    </exclusion>                    <exclusion>                        <groupId>javax.servlet</groupId>                        <artifactId>servlet-api</artifactId>                    </exclusion>                </exclusions>            </dependency>            <dependency>                <groupId>org.apache.tomcat.embed</groupId>                <artifactId>tomcat-embed-jasper</artifactId>                <version>${f.v.tomcat.embed.version}</version>            </dependency>            <dependency>                <groupId>org.apache.tomcat.embed</groupId>                <artifactId>tomcat-embed-el</artifactId>                <version>${f.v.tomcat.embed.version}</version>            </dependency>            <dependency>                <groupId>org.apache.tomcat.embed</groupId>                <artifactId>tomcat-embed-logging-juli</artifactId>                <version>${f.v.tomcat.embed.version}</version>            </dependency>        </dependencies>    </dependencyManagement>	<dependencies>		<!--	       - ERROR: Unable to compile class for JSP	       - REASON: 项目内的jsp-api.jar、servlet-api.jar等包，	       - 和应用服务器（JBoss/Tomcat等）中的包重复，且比其版本低，	       - 应用服务器在启动时会优先加载项目中的包，这样就导致和应用服务器中的其它包不匹配。	       - 可把重复的包从项目中删除，或将应用服务器下的这些包拷贝到项目中，重启服务即可。		  -->		<!--		<dependency>			<groupId>javax.servlet</groupId>			<artifactId>javax.servlet-api</artifactId>			<version>4.0.0-b01</version>		</dependency>		<dependency>			<groupId>javax.servlet</groupId>			<artifactId>jsp-api</artifactId>			<version>2.0</version>		</dependency>		<dependency>			<groupId>org.apache.tomcat</groupId>			<artifactId>tomcat-servlet-api</artifactId>			<version>${tomcat.version}</version>		</dependency>		<dependency>			<groupId>org.apache.tomcat</groupId>			<artifactId>tomcat-jsp-api</artifactId>			<version>${tomcat.version}</version>		</dependency>		<dependency>			<groupId>org.apache.tomcat</groupId>			<artifactId>tomcat-el-api</artifactId>			<version>${tomcat.version}</version>		</dependency>		<dependency>			<groupId>javax.validation</groupId>			<artifactId>validation-api</artifactId>			<version>1.1.0.Final</version>		</dependency>		<dependency>			<groupId>org.hibernate</groupId>			<artifactId>hibernate-validator</artifactId>			<version>5.3.0.Alpha1</version> 5.X版本还实现了JSR349的特性。			<version>4.3.2.Final</version> 4.X 版本是完全基于JSR303。		</dependency>		-->	</dependencies>	<build>		<finalName>${project.artifactId}</finalName>        <pluginManagement>            <plugins>                <plugin>                    <groupId>org.apache.maven.plugins</groupId>                    <artifactId>maven-compiler-plugin</artifactId>                    <version>2.5.1</version>                    <configuration>                        <source>${jdk.version}</source>                        <target>${jdk.version}</target>                        <encoding>${project.build.sourceEncoding}</encoding>                    </configuration>                </plugin>                <plugin>                    <groupId>org.apache.maven.plugins</groupId>                    <artifactId>maven-archetype-plugin</artifactId>                    <version>2.4</version>                </plugin>                <plugin><!-- jdk:1.6 -->                    <groupId>org.mortbay.jetty</groupId>                    <artifactId>jetty-maven-plugin</artifactId>                    <version>7.6.16.v20140903</version><!-- 8.1.16.v20140903 -->                    <configuration>                        <scanIntervalSeconds>10</scanIntervalSeconds>                        <webApp>                            <contextPath>/${project.artifactId}</contextPath>                        </webApp>                    </configuration>                </plugin>                <plugin><!-- jdk:1.7 -->                    <groupId>org.eclipse.jetty</groupId>                    <artifactId>jetty-maven-plugin</artifactId>                    <version>9.4.3.v20170317</version>                </plugin>            </plugins>        </pluginManagement>	</build>	<profiles>		<profile>			<id>jdk</id>			<activation>				<activeByDefault>true</activeByDefault>				<jdk>${jdk.version}</jdk>			</activation>			<properties>				<maven.compiler.source>${jdk.version}</maven.compiler.source>				<maven.compiler.target>${jdk.version}</maven.compiler.target>				<maven.compiler.compilerVersion>${jdk.version}</maven.compiler.compilerVersion>			</properties>		</profile>	</profiles></project>